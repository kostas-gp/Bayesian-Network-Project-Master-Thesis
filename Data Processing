#import libraries 

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import csv
import seaborn as sns; sns.set()
from sklearn.decomposition import PCA



%matplotlib inline

from sklearn.model_selection import train_test_split
from sklearn.linear_model import Lasso, LogisticRegression
from sklearn.feature_selection import SelectFromModel
from sklearn.preprocessing import StandardScaler

#read the data
data = pd.read_csv('C:/Users/kgpaz/Desktop/test.csv', index_col=0)
data.shape

# for the method pearson coefficient correlation
corr = data.corr() 

# Data processing with Lasso reqularisation

#Scaling the data, as linear models benefits from feature scaling
scaler = StandardScaler()
scaler.fit(data)

#Selecting features using Lasso regularisation
sel_ = SelectFromModel(LogisticRegression(C=1, penalty='l1'))
data_new=sel_.transform(data)

#Data processing with PCA method

pca = PCA(.8)
pca.fit(data)

data_pca =pd.DataFrame(pca.transform(data))
data_pca.head()

#print the original and ytransformed shape
print("original shape:   ", data.shape)
print("transformed shape:", data_pca.shape)

#Data processing with Pearson Coefficient Corelation

#plot the graph
fig = plt.figure()
ax = fig.add_subplot(111)
cax = ax.matshow(corr,cmap='coolwarm', vmin=-1, vmax=1)
fig.colorbar(cax)
ticks = np.arange(0,len(data.columns),1)
ax.set_xticks(ticks)
plt.xticks(rotation=90)
ax.set_yticks(ticks)
ax.set_xticklabels(data.columns)
ax.set_yticklabels(data.columns)
plt.show()

